name: Longhorn Kubernetes Deployment
on:
  push:
    branches:
      - master
    paths:
      - 'kubernetes/longhorn/**'
      - '.github/workflows/k8s-longhorn.yaml'
  workflow_dispatch:
jobs:
  apply:
    env:
      LONGHORN_VERSION: 1.9.0
      NAMESPACE: longhorn
    runs-on: github-runners-clincha
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Kubernetes CLI
        uses: azure/setup-kubectl@v4
        with:
          version: 'v1.32.0'

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0
        with:
          version: 'v3.18.2'

      - name: Deploy kube config
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Setup Kubenetes nodes to create default disks
        working-directory: kubernetes/longhorn
        run: |
          kubectl patch node k8s-master-1 --type merge --patch-file ./node-disks.yml
          kubectl patch node k8s-master-2 --type merge --patch-file ./node-disks.yml
          kubectl patch node k8s-master-3 --type merge --patch-file ./node-disks.yml

      - name: Install Longhorn using Helm
        working-directory: kubernetes/longhorn
        run: |
          helm repo add longhorn https://charts.longhorn.io
          helm repo update
          helm upgrade --install --wait longhorn longhorn/longhorn \
            --version ${{ env.LONGHORN_VERSION }} \
            --namespace ${{ env.NAMESPACE }} --create-namespace \
            --values values.yml

      - name: Deploy Longhorn backup jobs
        working-directory: kubernetes/longhorn
        run: |
          kubectl apply -f backup-jobs.yml

      - name: Deploy Longhorn storage classes
        working-directory: kubernetes/longhorn
        run: |
          kubectl apply -f storage-class.yml

      - name: Deploy Longhorn ingress
        working-directory: kubernetes/longhorn
        run: |
          kubectl apply -f ingress.yml